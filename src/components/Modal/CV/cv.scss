@use '../../../style/vars';
@use '../../../style/mixins';

.modal-cv {
  @include mixins.modalBackground;

  &-content {
    @include mixins.modalContent;
    width: fit-content;
    height: fit-content;
    padding-bottom: 1rem;
    border-radius: .3em;
    text-align: center;
    padding: 2em;

    animation: fadeIn 1s;

    @keyframes fadeIn {
      from {
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }

    &-icon {
      width: 18px;
      position: absolute;
      top: 10px;
      right: 10px;
      cursor: pointer;
      @include mixins.filterThirdColor;
    }
  }

  h1 {
    margin-bottom: 1.5em;
    font-size: 1.3em;
  }

  &-buttons {
    @media screen and (min-width: 1024px) {
      display: flex;
      justify-content: space-around;
    }

    margin: auto;
    width: 80%;

    a {
      display: block;
      width: fit-content;
      margin: auto;
      text-decoration: none;
      color: vars.$lightColor;
      background-color: vars.$secondaryColor;
      cursor: pointer;
      padding: 1em;
      border-radius: .1em;
      font-size: .8em;

      @media screen and (max-width: 768px) {
        margin-bottom: 1em;
      }

      &:hover {
        background-color: darken($color: vars.$secondaryColor, $amount: 10%);
        transition: .3s;
      }
    }

    button {
      cursor: pointer;
      height: fit-content;
      margin: auto;
      display: block;
      padding: 1em;
      border-radius: .1em;
      background-color: darken($color: vars.$lightColor, $amount: 50%);
      color: vars.$lightColor;

      a {
        text-decoration: none;
        color: vars.$lightColor;
      }

      &:hover {
        background-color: vars.$lightColor;
        color: darken($color: vars.$lightColor, $amount: 50%);
        transition: .3s;
      }
    }
  }
}

// Light mode style
#light-mode {
  .modal-cv-content {
    background-color: #EDEDED;
  }
}